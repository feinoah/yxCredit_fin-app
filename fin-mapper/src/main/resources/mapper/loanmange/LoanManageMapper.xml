<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zw.rule.mapper.loanmange.LoanManageMapper">
    <resultMap id="BaseResultMap" type="com.zw.rule.loanmange.po.LoanManage">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="amount" property="amount" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="VARCHAR"/>
        <result column="createtime" property="createtime" jdbcType="VARCHAR"/>
        <result column="updatetime" property="updatetime" jdbcType="VARCHAR"/>
        <result column="des" property="des" jdbcType="VARCHAR"/>
        <result column="order_id" property="orderId" jdbcType="VARCHAR"/>
        <result column="cust_id" property="custId" jdbcType="VARCHAR"/>
        <result column="loan_time" property="loanTime" jdbcType="VARCHAR"/>
        <result column="manageFee" property="managefee" jdbcType="VARCHAR"/>
        <result column="quickTrialFee" property="quicktrialfee" jdbcType="VARCHAR"/>
        <result column="payable_amount" property="payableAmount" jdbcType="VARCHAR"/>
        <result column="expiration_date" property="expirationDate" jdbcType="VARCHAR"/>
        <result column="derate_amount" property="derateAmount" jdbcType="VARCHAR"/>
        <result column="agent_amount" property="agentAmount" jdbcType="VARCHAR"/>
        <result column="penalty" property="penalty" jdbcType="VARCHAR"/>
        <result column="withdrawals_id" property="withdrawalsId" jdbcType="VARCHAR"/>
        <result column="settle_state" property="settleState" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, amount, state, createtime, updatetime, des, order_id, cust_id,
     loan_time, manageFee, quickTrialFee, payable_amount, expiration_date,
    derate_amount, agent_amount, penalty,type,withdrawals_id,settle_state
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from mag_loan
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from mag_loan
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.zw.rule.loanmange.po.LoanManage">
    insert into mag_loan (id,  user_id,
      amount, state, createtime, 
      updatetime, des, order_id, 
      cust_id,loan_time, manageFee, quickTrialFee,
      payable_amount, expiration_date, derate_amount, 
      agent_amount, penalty,withdrawals_id,type)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR},
      #{amount,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{createtime,jdbcType=VARCHAR}, 
      #{updatetime,jdbcType=VARCHAR}, #{des,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, 
      #{custId,jdbcType=VARCHAR}, #{loanTime,jdbcType=VARCHAR}, #{managefee,jdbcType=VARCHAR}, #{quicktrialfee,jdbcType=VARCHAR},
      #{payableAmount,jdbcType=VARCHAR}, #{expirationDate,jdbcType=VARCHAR}, #{derateAmount,jdbcType=VARCHAR}, 
      #{agentAmount,jdbcType=VARCHAR}, #{penalty,jdbcType=VARCHAR},#{withdrawalsId},#{type})
  </insert>
    <insert id="insertSelective" parameterType="com.zw.rule.loanmange.po.LoanManage">
        insert into mag_loan
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="createtime != null">
                createtime,
            </if>
            <if test="updatetime != null">
                updatetime,
            </if>
            <if test="des != null">
                des,
            </if>
            <if test="orderId != null">
                order_id,
            </if>
            <if test="custId != null">
                cust_id,
            </if>
            <if test="loanTime != null">
                loan_time,
            </if>
            <if test="managefee != null">
                manageFee,
            </if>
            <if test="quicktrialfee != null">
                quickTrialFee,
            </if>
            <if test="payableAmount != null">
                payable_amount,
            </if>
            <if test="expirationDate != null">
                expiration_date,
            </if>
            <if test="derateAmount != null">
                derate_amount,
            </if>
            <if test="agentAmount != null">
                agent_amount,
            </if>
            <if test="penalty != null">
                penalty,
            </if>
            <if test="type != null">
                type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=VARCHAR},
            </if>
            <if test="updatetime != null">
                #{updatetime,jdbcType=VARCHAR},
            </if>
            <if test="des != null">
                #{des,jdbcType=VARCHAR},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="custId != null">
                #{custId,jdbcType=VARCHAR},
            </if>
            <if test="loanTime != null">
                #{loanTime,jdbcType=VARCHAR},
            </if>
            <if test="managefee != null">
                #{managefee,jdbcType=VARCHAR},
            </if>
            <if test="quicktrialfee != null">
                #{quicktrialfee,jdbcType=VARCHAR},
            </if>
            <if test="payableAmount != null">
                #{payableAmount,jdbcType=VARCHAR},
            </if>
            <if test="expirationDate != null">
                #{expirationDate,jdbcType=VARCHAR},
            </if>
            <if test="derateAmount != null">
                #{derateAmount,jdbcType=VARCHAR},
            </if>
            <if test="agentAmount != null">
                #{agentAmount,jdbcType=VARCHAR},
            </if>
            <if test="penalty != null">
                #{penalty,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zw.rule.loanmange.po.LoanManage">
        update mag_loan
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                createtime = #{createtime,jdbcType=VARCHAR},
            </if>
            <if test="updatetime != null">
                updatetime = #{updatetime,jdbcType=VARCHAR},
            </if>
            <if test="des != null">
                des = #{des,jdbcType=VARCHAR},
            </if>
            <if test="orderId != null">
                order_id = #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="custId != null">
                cust_id = #{custId,jdbcType=VARCHAR},
            </if>
            <if test="loanTime != null">
                loan_time = #{loanTime,jdbcType=VARCHAR},
            </if>
            <if test="managefee != null">
                manageFee = #{managefee,jdbcType=VARCHAR},
            </if>
            <if test="quicktrialfee != null">
                quickTrialFee = #{quicktrialfee,jdbcType=VARCHAR},
            </if>
            <if test="payableAmount != null">
                payable_amount = #{payableAmount,jdbcType=VARCHAR},
            </if>
            <if test="expirationDate != null">
                expiration_date = #{expirationDate,jdbcType=VARCHAR},
            </if>
            <if test="derateAmount != null">
                derate_amount = #{derateAmount,jdbcType=VARCHAR},
            </if>
            <if test="agentAmount != null">
                agent_amount = #{agentAmount,jdbcType=VARCHAR},
            </if>
            <if test="penalty != null">
                penalty = #{penalty,jdbcType=VARCHAR},
            </if>
            <if test="returnedAmount != null">
                returned_amount = #{returnedAmount,jdbcType=VARCHAR},
            </if>
            <if test="unpaidAmount != null">
                unpaid_amount = #{unpaidAmount,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zw.rule.loanmange.po.LoanManage">
        update mag_loan
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                createtime = #{createtime,jdbcType=VARCHAR},
            </if>
            <if test="updatetime != null">
                updatetime = #{updatetime,jdbcType=VARCHAR},
            </if>
            <if test="des != null">
                des = #{des,jdbcType=VARCHAR},
            </if>
            <if test="loanTime != null">
                loan_time = #{loanTime,jdbcType=VARCHAR},
            </if>
            <if test="managefee != null">
                manageFee = #{managefee,jdbcType=VARCHAR},
            </if>
            <if test="quicktrialfee != null">
                quickTrialFee = #{quicktrialfee,jdbcType=VARCHAR},
            </if>
            <if test="payableAmount != null">
                payable_amount = #{payableAmount,jdbcType=VARCHAR},
            </if>
            <if test="expirationDate != null">
                expiration_date = #{expirationDate,jdbcType=VARCHAR},
            </if>
            <if test="derateAmount != null">
                derate_amount = #{derateAmount,jdbcType=VARCHAR},
            </if>
            <if test="agentAmount != null">
                agent_amount = #{agentAmount,jdbcType=VARCHAR},
            </if>
            <if test="penalty != null">
                penalty = #{penalty,jdbcType=VARCHAR},
            </if>
            <if test="settleState != null">
                settle_state = #{settleState,jdbcType=VARCHAR}
            </if>
        </set>
        <where>
            1=1
            <if test="id != null">
                AND id = #{id}
            </if>
            <if test="type != null">
                AND type = #{type}
            </if>
            <if test="orderId != null">
                AND order_id = #{orderId}
            </if>
        </where>
    </update>

    <select id="getLoanManage" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
            ml.*,
            mc.CARD AS card,
            mc.person_name AS personName,
            mc.tel AS TEL,
            mc.id AS customerId,
            mo.state AS order_state,
            mo.order_type,
            mo.order_no,
            msr1.state AS msr1State,
            msr2.state AS msr2State,
            mr.overdueCount,
            mo.periods,
            (SELECT COUNT(id)	FROM	mag_repayment	WHERE	order_id = ml.order_id	AND state = '2'	) AS repaidCount,
            (	SELECT COUNT(id) FROM	mag_repayment WHERE order_id = ml.order_id	AND state IN ('1', '3', '4')) AS stayStillCount,
            (SELECT	SUM(amount_collection) FROM mag_servicepag_order WHERE state = '1' AND type = '1' AND order_id = ml.order_id) AS amountCollection
        FROM
          mag_loan ml
        LEFT JOIN mag_customer mc ON ml.user_id = mc.user_id
        LEFT JOIN mag_order mo ON mo.id = ml.order_id
        LEFT JOIN mag_salesman ms ON mo.emp_id = ms.id
        LEFT JOIN mag_settle_record msr1 ON ( msr1.order_id = ml.order_id	AND msr1.settle_type = '0'	AND (	msr1.state = '1'	OR msr1.state = '2'))
        LEFT JOIN mag_settle_record msr2 ON ( msr2.order_id = ml.order_id AND msr2.settle_type = '1' AND ( msr2.state = '1'	OR msr2.state = '2') )
        LEFT JOIN (SELECT order_id, COUNT(order_id) AS overdueCount FROM 	mag_repayment WHERE overdue_days > 0 GROUP BY order_id) mr ON ml.order_id = mr.order_id
        <where>
            ml.state='1'
            and ml.type='1'
            AND mo.order_type='2'
            <if test=" headquarters!= null and headquarters != ''">
                and ms.branch in (SELECT id FROM zw_sys_department where FIND_IN_SET(id,
                getChildDepartment(${headquarters})))
            </if>

            <if test=" branch!= null and branch != ''">
                and ms.branch =#{branch}
            </if>
            <if test=" personName !=null and personName !='' ">
                and mc.person_name LIKE '%${personName}%'
            </if>
            <if test='isoverdue=="0" '>
                and mr.overdueCount>0
            </if>
            <if test='isoverdue=="1" '>
                and mr.overdueCount IS null
            </if>
        </where>
        order by ml.createtime desc
    </select>

    <select id="getRepaymentList" resultType="java.util.Map" parameterType="java.util.Map">

        SELECT mo.id as order_id, mo.order_no AS orderNo, mo.periods, mo.customer_name AS customerName, mo.tel, mo.applay_money applayMoney,mo.MERCHANT_NAME as merchantName,
                (case when mo.state='5' and mo.commodity_state &gt; '15' and mo.commodity_state &lt; '16.7' then '-1'
                when mo.state='5' and mo.commodity_state = '16.7' then '-2'
                when  mo.state='5' and mo.commodity_state &gt; '16.7' and mo.commodity_state &lt; '18' then '-3'
                when mo.state='5' and mo.commodity_state = '18' then '-4'
                when mo.state='5' and mo.commodity_state &gt;= '19' and mo.commodity_state &lt; '21' and t.repayCount = 0 then '-5'
                when mo.state='5' and mo.commodity_state &gt;= '19' and mo.commodity_state &lt; '21' and t.repayCount > 0 then '-6'
                when mo.state='0' and mo.commodity_state = '21' then '-7'
                else mo.state end) as order_state,
                mo.alter_time AS alterTime, t.alreadyPayCount, t.fee, t.realAmount, t.realFee,t.overdueCount, ml.id,
                t.derateAmount, t.redAmount, t.penalty, (t.defaultInterest + t.penalty) AS totalFine, mso.amountCollection, (ifnull(rp.amount,0) + ifnull(mso.payCollection, 0)) as payCollection, ml.expiration_date AS expirationDate,
                ml.settle_state, (CASE WHEN msr.settle_type = '0' and msr.state='2' THEN msr.settle_fee ELSE 0 END) AS settleFee,msr.state as msrState,
                (CASE WHEN msr.settle_type = '1' and msr.state='2' THEN msr.settle_amount ELSE t.settleAmount END) AS settleAmount, msr.settle_type AS settleType
          FROM (SELECT order_id, sum(CASE WHEN (state = '2' or state='4') AND actual_amount != '' AND actual_amount IS NOT NULL THEN 1 ELSE 0 END) AS alreadyPayCount,
                        sum(fee) AS fee, sum(CASE WHEN state = '2' AND actual_amount != '' AND actual_amount IS NOT NULL THEN amount ELSE 0 END) AS realAmount,
                        sum(CASE WHEN state = '2' AND (actual_amount = '' OR actual_amount IS NULL) THEN amount ELSE 0 END) AS settleAmount,
                        sum(CASE WHEN state = '2' AND actual_amount != '' AND actual_amount IS NOT NULL THEN fee ELSE 0 END) AS realFee,
                        sum(CASE WHEN state = '2' AND actual_amount != '' AND actual_amount IS NOT NULL THEN penalty ELSE 0 END) AS penalty,
                        sum(CASE WHEN state = '2' AND actual_amount != '' AND actual_amount IS NOT NULL THEN default_interest ELSE 0 END) AS defaultInterest,
                        sum(CASE WHEN state = '2' AND actual_amount != '' AND actual_amount IS NOT NULL THEN derate_amount ELSE 0 END) AS derateAmount,
                        sum(CASE WHEN state = '2' AND actual_amount != '' AND actual_amount IS NOT NULL THEN red_amount ELSE 0 END) AS redAmount,
                        sum(CASE WHEN overdue_days > 0 THEN 1 ELSE 0 END) AS overdueCount,
                        sum(case when state='2' or state='3' or state='4' then 1 else 0 end) as repayCount
                  FROM  mag_repayment
                 GROUP BY order_id) t
         INNER JOIN mag_order mo ON t.order_id = mo.id
        left join (select mr1.order_id,sum(spr1.amount) as amount
                    from (select repayment_id, sum(amount) as amount from service_package_repayment GROUP BY repayment_id) spr1
                    inner join mag_repayment  mr1 on spr1.repayment_id = mr1.id
                    where mr1.state='2' or mr1.state='4'
                    GROUP BY mr1.order_id) rp
        on mo.id=rp.order_id
          LEFT JOIN (SELECT order_id, sum(case when period_collection is not null and period_collection != '' then amount_collection * period_collection ELSE amount_collection end) AS amountCollection,
                              sum(CASE WHEN state = 1 THEN amount_collection ELSE 0 END) AS payCollection
                        FROM mag_servicepag_order
                       GROUP BY order_id) mso ON mso.order_id = mo.id
          LEFT JOIN mag_loan ml ON ml.order_id = mo.id
          LEFT JOIN mag_settle_record msr ON msr.order_id = mo.id AND (msr.state = '2' or msr.state = '1')
          LEFT JOIN mag_salesman ms on mo.emp_id=ms.id
        <where>
            ml.state='1'
            and ml.type='1'
            AND mo.order_type='2'
            <if test=" headquarters!= null and headquarters != ''">
                and ms.branch in (SELECT id FROM zw_sys_department where FIND_IN_SET(id,
                getChildDepartment(${headquarters})))
            </if>

            <if test=" branch!= null and branch != ''">
                and ms.branch =#{branch}
            </if>
            <if test=" personName !=null and personName !='' ">
                and mo.CUSTOMER_NAME LIKE '%${personName}%'
            </if>
            <if test='isoverdue=="0" '>
                and t.overdueCount>0
            </if>
            <if test='isoverdue=="1" '>
                and t.overdueCount= 0
            </if>
        </where>
        order by mo.creat_time desc
    </select>


    <select id="getLoanManageHJD" resultType="java.util.Map" parameterType="java.util.Map">

        SELECT ml.*,mc.CARD AS card,mc.person_name AS personName,mc.tel AS TEL,mc.id AS customerId,mo.state AS
        order_state,mo.order_type,mr.overdueCount FROM mag_loan ml
        LEFT JOIN mag_customer mc ON ml.user_id = mc.user_id
        LEFT JOIN mag_order mo ON mo.id=ml.order_id
        LEFT JOIN (SELECT order_id, COUNT(order_id) as overdueCount FROM mag_repayment where overdue_days>0 GROUP BY
        order_id ) mr ON ml.order_id=mr.order_id
        <where>
            ml.state='1'
            AND mo.order_type='1'
            and ml.type='1'
            <if test=" personName !=null and personName !='' ">
                and mc.person_name LIKE '%${personName}%'
            </if>
            <if test='isoverdue=="0" '>
                and mr.overdueCount>0
            </if>
            <if test='isoverdue=="1" '>
                and mr.overdueCount IS null
            </if>
        </where>
        order by ml.createtime desc
    </select>

    <select id="getByPrimaryKey" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from mag_loan
        <where>
            1=1
            <if test="state != null and state != ''">
                and state=#{state}
            </if>
            <if test="withdrawalsId != null and withdrawalsId != ''">
                and withdrawals_Id=#{withdrawalsId}
            </if>
            <if test="orderId != null and orderId != ''">
                and order_id=#{orderId}
            </if>
        </where>
    </select>

    <select id="getMagSettleRecord" parameterType="java.util.Map" resultType="com.zw.rule.loanmange.po.SettleRecord">
        select id,order_id AS orderId,loan_id AS loanId,settle_type AS settleType,settle_fee AS settleFee,settle_amount
        AS settleAmount, effective_time AS effectiveTime,state state,create_time AS createTime,operator_id AS
        operatorId,operator_name AS operatorName
        from mag_settle_record
        <where>
            1=1 AND state!='0'
            <if test="loanId !=null">
                AND loan_id=#{loanId}
            </if>
            <if test="state !=null">
                AND state=#{state}
            </if>
            <if test="type !=null">
                AND settle_type=#{type}
            </if>
            <if test="orderId !=null">
                AND order_id=#{orderId}
            </if>
        </where>
    </select>

    <insert id="addSettleRecord" parameterType="com.zw.rule.loanmange.po.SettleRecord">
        insert into mag_settle_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="orderId != null">
                order_id,
            </if>
            <if test="loanId != null">
                loan_id,
            </if>
            <if test="settleType != null">
                settle_type,
            </if>
            <if test="settleFee != null">
                settle_fee,
            </if>
            <if test="settleAmount != null">
                settle_amount,
            </if>
            <if test="effectiveTime != null">
                effective_time,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="operatorId != null">
                operator_id,
            </if>
            <if test="operatorName != null">
                operator_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="loanId != null">
                #{loanId,jdbcType=VARCHAR},
            </if>
            <if test="settleType != null">
                #{settleType,jdbcType=VARCHAR},
            </if>
            <if test="settleFee != null">
                #{settleFee,jdbcType=VARCHAR},
            </if>
            <if test="settleAmount != null">
                #{settleAmount,jdbcType=VARCHAR},
            </if>
            <if test="effectiveTime != null">
                #{effectiveTime,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=VARCHAR},
            </if>
            <if test="operatorId != null">
                #{operatorId,jdbcType=VARCHAR},
            </if>
            <if test="operatorName != null">
                #{operatorName,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateSettleRecord" parameterType="java.util.Map">
        UPDATE mag_settle_record
        <set>
            <if test="orderId != null">
                order_id=#{orderId},
            </if>
            <if test="loanId != null">
                loan_id=#{loanId},
            </if>
            <if test="settleType != null">
                settle_type=#{settleType},
            </if>
            <if test="settleFee != null">
                settle_fee=#{settleFee},
            </if>
            <if test="settleAmount != null">
                settle_amount=#{settleAmount},
            </if>
            <if test="effectiveTime != null">
                effective_time=#{effectiveTime},
            </if>
            <if test="state != null">
                state=#{state},
            </if>
            <if test="createTime != null">
                create_time=#{createTime},
            </if>
            <if test="operatorId != null">
                operator_id=#{operatorId},
            </if>
            <if test="operatorName != null">
                operator_name=#{operatorName},
            </if>
        </set>
        <where>
            1=1
            <if test="id != null">
                AND id=#{id}
            </if>
        </where>
    </update>
    <select id="getJYDetailList" parameterType="java.util.Map" resultType="java.util.Map">
       SELECT
            mtd2.id, mtd2.batch_no, mtd2.amount, mtd2.bank_name, mtd2.bank_card, mtd2.order_id, mtd2.baofu_mag, mtd2.baofu_code,
            mtd2.baofu_asynchronous_mag, mtd2.baofu_asynchronous_code, mtd2.type, mtd2.state, mtd2.creat_time, mtd2.success_time,
            mtd2.source, mtd2.fangkuanType, mtd2.huankuanType, mtd2.des
       FROM( SELECT
            max(mtd.id) AS id, mtd.batch_no, sum(mtd.amount) AS amount, max(mtd.bank_name) AS bank_name, max(mtd.bank_card) AS bank_card,
            max(mtd.order_id) AS order_id, max(mtd.baofu_mag) AS baofu_mag, max(mtd.baofu_code) AS baofu_code, max(mtd.baofu_asynchronous_mag) AS baofu_asynchronous_mag,
            max(mtd.baofu_asynchronous_code) AS baofu_asynchronous_code, max(mtd.type) AS type, max(mtd.state) AS state, max(mtd.creat_time) AS creat_time,
            max(mtd.success_time) AS success_time, max(mtd.source) AS source, max(mtd.fangkuanType) AS fangkuanType, max(mtd.huankuanType) AS huankuanType,
            GROUP_CONCAT(mtd.des) AS des
         FROM mag_transaction_details mtd
        WHERE mtd.order_id = #{orderId} AND mtd.batch_no != '' AND mtd.batch_no IS NOT NULL GROUP BY mtd.batch_no
        UNION ALL
        SELECT
            mtd1.id, mtd1.batch_no, mtd1.amount, mtd1.bank_name, mtd1.bank_card, mtd1.order_id, mtd1.baofu_mag, mtd1.baofu_code,
            mtd1.baofu_asynchronous_mag, mtd1.baofu_asynchronous_code, mtd1.type, mtd1.state, mtd1.creat_time, mtd1.success_time,
            mtd1.source, mtd1.fangkuanType, mtd1.huankuanType, mtd1.des
         FROM mag_transaction_details mtd1
        WHERE mtd1.order_id = #{orderId} AND ( mtd1.batch_no = '' OR mtd1.batch_no IS NULL)) mtd2
        ORDER BY mtd2.success_time
    </select>
</mapper>
